name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  # --- Job 1: Die Anwendung bauen ---
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20' # Oder deine bevorzugte Version
        cache: 'npm'

    - name: Install Dependencies
      run: npm install

    - name: Build Application
      run: npm run build

    - name: Prepare Artifact
      run: |
        mkdir -p deploy-package
        cp -R .next deploy-package/
        cp -R node_modules deploy-package/
        cp package.json deploy-package/
        # Falls du eine .env.production Datei hast, kopiere sie nicht! Die liegt auf dem Server.
        # Falls du eine server.js Datei hast, kopiere sie auch.

    - name: Upload Artifact
      uses: actions/upload-artifact@v4 # ✅ HIER v3 zu v4 ÄNDERN
      with:
        name: build-artifact
        path: deploy-package/

  # --- Job 2: Das gebaute Artefakt auf den VPS deployen ---
  deploy:
    # Dieser Job startet erst, wenn 'build' erfolgreich war
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Download Artifact
      uses: actions/download-artifact@v4 # ✅ Correct
      with:
        name: build-artifact
        path: build-artifact/

    - name: Deploy to VPS with rsync
      uses: burnett01/rsync-deployments@6.0.0
      with:
        switches: -avzr --delete
        path: build-artifact/
        remote_path: /var/www/mein-projekt
        remote_host: ${{ secrets.VPS_HOST }}
        remote_user: ${{ secrets.VPS_USERNAME }}
        remote_key: ${{ secrets.VPS_SSH_KEY }}

    - name: Restart Application on VPS
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        script: |
          cd /var/www/tinyllm
          # NVM laden, falls PM2 es braucht
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          # App neustarten
          pm2 start npm --name tinyllm -- run start || pm2 restart tinyllm