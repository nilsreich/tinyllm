name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  # --- Job 1: Die Anwendung bauen ---
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '22'
        cache: 'npm'

    - name: Install Dependencies
      run: npm install

    - name: Build Application
      run: npm run build

    # ✅ WICHTIGE ÄNDERUNG: Wir packen node_modules NICHT mehr in das Artefakt!
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: build-artifact
        path: |
          .next
          public
          package.json
          package-lock.json
          next.config.js

  # --- Job 2: Das gebaute Artefakt auf den VPS deployen ---
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download Artifact
      uses: actions/download-artifact@v4
      with:
        name: build-artifact
        path: build-artifact/

    - name: Deploy to VPS with rsync
      uses: burnett01/rsync-deployments@6.0.0
      with:
        switches: -avzr --delete
        path: build-artifact/
        remote_path: /var/www/tinyllm
        remote_host: ${{ secrets.VPS_HOST }}
        remote_user: ${{ secrets.VPS_USERNAME }}
        remote_key: ${{ secrets.VPS_SSH_KEY }}

    - name: Install Dependencies and Restart App on VPS
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        script: |
          cd /var/www/tinyllm
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          
          # ✅ WICHTIGE ÄNDERUNG: Abhängigkeiten auf dem Server installieren
          # --production installiert nur die für den Betrieb nötigen Pakete, keine devDependencies
          echo "-----> Installing production dependencies on server..."
          npm install --production
          
          # App neustarten oder zum ersten Mal starten
          echo "-----> Restarting application with PM2..."
          pm2 restart tinyllm || pm2 start npm --name "tinyllm" -- run start